name: Build and Deploy
on: 
  - push

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ env.GITHUB_SHA_SHORT }}
      environment: ${{ env.ENVIRONMENT }}
      aws_account: ${{ env.AWS_ACCOUNT }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3      
      - name: Generate outputs
        run: |
          echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" | tee $GITHUB_ENV
      - name: Set default environment
        run: |
          echo "ENVIRONMENT=dev" | tee $GITHUB_ENV   

      - name: Set environment for stage
        if: github.ref == 'refs/heads/main'
        run: |
          echo "ENVIRONMENT=stage" | tee $GITHUB_ENV
               
      - name: Set environment for prod
        if: startsWith(github.ref, 'refs/tags/release-')
        run: |
          echo "ENVIRONMENT=prod" | tee $GITHUB_ENV

      - name: Set AWS account based on environment
        run: |
          echo "AWS_ACCOUNT=$(cat ./infrastructure/environments/$ENVIRONMENT/vars.tfvars | grep aws_account | awk -F'"' '{print $2}')" | tee $GITHUB_ENV

  build-test:
    needs: 
      - init
    runs-on: a-self-hosted-instance
    container:
      image: python:3.9   
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v3    
      - name: Configure AWS Credentials        
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ needs.init.outputs.aws_account }}:role/terraformAdministrator"
          aws-region: us-east-1   

  terraform-deploy:
    needs:
      - init
      - build-test
    runs-on: a-self-hosted-instance
    container:
      image: python:3.9
    steps:  
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '14'        
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.3              
      - name: Deploy using Terraform   
        run: |
          cd infrastructure
          terraform init -backend-config="environments/${{needs.init.outputs.environment}}/config.s3.tfbackend"
          terraform plan -var-file="environments/${{needs.init.outputs.environment}}/vars.tfvars"
          terraform apply -var-file="environments/${{needs.init.outputs.environment}}/vars.tfvars" -auto-approve

